Description: "Cops Reader CloudFormation Template: This CloudFormation template is used to create a reader IAM role for Cops. The role's primary purpose is to grant read-only access to Cops resources. By\
  \ using this role, users will have the ability to view and retrieve information from Cops resources while maintaining strict restrictions on modifying or altering them. "
Parameters:
  AWSIntegrationID:
    Description: Do not edit. This ID is used to provide secure access.
    Type: String
Resources:
  CopsEventHandler:
    Properties:
      AWSIntegrationID: !Ref 'AWSIntegrationID'
      AccountID: !Sub '${AWS::AccountId}'
      CopsRoleArn: !Sub 'arn:aws:lambda:${AWS::Region}:609973658768:function:CopsEventHandler'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:609973658768:function:CopsEventHandler'
    Type: Custom::CopsEventHandler
  CopsReaderPermission:
    Properties:
      ManagedPolicyName: reader-policy-for-support-role
      PolicyDocument:
        Statement:
          - Action:
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:cops-*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/cops-*:*'
          - Action:
              - logs:ListTagsLogGroup
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:cops-*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/cops-*:*'
          - Action:
              - s3:ListBucket
              - s3:GetEncryptionConfiguration
              - s3:GetBucketLogging
              - S3:GetBucketPolicy
              - s3:GetAccelerateConfiguration
              - s3:GetBucketAcl
              - s3:GetBucketWebsite
              - s3:GetBucketVersioning
              - s3:ListBucketVersions
              - s3:GetBucketCORS
              - s3:GetBucketLocation
              - s3:GetReplicationConfiguration
              - s3:GetBucketTagging
              - s3:GetBucketOwnershipControls
              - s3:GetBucketRequestPayment
              - s3:GetLifecycleConfiguration
              - s3:GetObject
              - s3:GetBucketObjectLockConfiguration
              - s3:GetBucketPublicAccessBlock
            Effect: Allow
            Resource:
              - arn:aws:s3:::cops-*
              - arn:aws:s3:::cops-*/*
              - arn:aws:s3:::cops-*
              - arn:aws:s3:::cops-*/*
          - Action:
              - events:DescribeRule
              - events:ListTargetsByRule
              - events:ListTagsForResource
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/Karpenter*'
          - Action:
              - sqs:GetQueueAttributes
              - sqs:ListQueueTags
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:Karpenter*'
          - Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeScalingActivities
              - autoscaling:DescribeTags
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - eks:DescribeCluster
              - eks:DescribeNodegroup
              - eks:DescribeUpdate
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/cops-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/cops-*/cops-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/cops-*'
          - Action:
              - eks:ListTagsForResource
              - eks:ListNodegroups
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/cops-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/cops-*/cops-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/cops-*'
          - Action:
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:DescribeKey
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/*'
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*'
          - Action:
              - kms:ListResourceTags
              - kms:ListAliases
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - iam:GetOpenIDConnectProvider
              - iam:GetInstanceProfile
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/*'
          - Action:
              - iam:GetPolicyVersion
              - iam:GetPolicy
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListPolicyVersions
              - iam:ListPolicyTags
              - iam:ListRoleTags
              - iam:ListInstanceProfilesForRole
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/cops-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/Cops-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitrole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitpolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*AWSService*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*.amazonaws.com/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/cops-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/Cops-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*fluentbitrole*'
          - Action:
              - iam:ListOpenIDConnectProviderTags
              - iam:ListInstanceProfileTags
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/*'
          - Action:
              - ec2:DescribeVpcAttribute
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByCops: 'true'
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeFlowLogs
              - ec2:DescribeInstanceTypeOfferings
              - ec2:DescribeInternetGateways
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribePrefixLists
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcs
              - ec2:DescribeImages
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeLaunchTemplateVersions
              - ec2:GetEbsEncryptionByDefault
              - iam:ListRoles
              - iam:ListPolicies
            Effect: Allow
            Resource:
              - '*'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  CrossAccountRoleForAWSTrustedAdvisorCops:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::609973658768:user/cops
        Version: '2012-10-17'
      ManagedPolicyArns:
        - !Ref 'CopsReaderPermission'
      RoleName: cops-support
    Type: AWS::IAM::Role
